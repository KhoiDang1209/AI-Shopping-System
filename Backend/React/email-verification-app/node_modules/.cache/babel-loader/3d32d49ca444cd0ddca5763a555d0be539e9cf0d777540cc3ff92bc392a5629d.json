{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\GitHub\\\\AI-Shopping-System\\\\React\\\\email-verification-app\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    user_name: \"\",\n    email_address: \"\",\n    phone_number: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const content = {\n        subject: \"Email Verification\",\n        message: \"Please use the code below to verify your email.\"\n      };\n\n      // POST request to the FastAPI backend to register the user\n      const response = await axios.post(\"http://127.0.0.1:8000/register\", {\n        ...user,\n        content\n      });\n      console.log(response); // This will log the full response object\n\n      // You can log just the response data if you're only interested in that\n      console.log(response.data);\n      // Assuming that the response will have the user's data on success\n      if (response.data) {\n        setMessage(\"Registration successful. Please check your email for verification.\");\n        navigate(\"/verify\", {\n          state: {\n            email: user.email_address\n          }\n        });\n      }\n    } catch (error) {\n      if (error.response) {\n        // Assuming the error has a 'data' object with a 'detail' field\n        setMessage(error.response.data.detail || \"An error occurred.\");\n      } else if (error.request) {\n        setMessage(\"No response from the server. Please try again.\");\n      } else {\n        setMessage(\"Error: \" + error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user_name\",\n        placeholder: \"Name\",\n        value: user.user_name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(user)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email_address\",\n        placeholder: \"Email\",\n        value: user.email_address,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone_number\",\n        placeholder: \"Phone Number\",\n        value: user.phone_number,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: user.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"jtGkkeQ82lTyCFKU4Lx6CSeObRQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Register","_s","navigate","user","setUser","user_name","email_address","phone_number","password","message","setMessage","handleChange","e","name","value","target","handleSubmit","preventDefault","content","subject","response","post","console","log","data","state","email","error","detail","request","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/GitHub/AI-Shopping-System/React/email-verification-app/src/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Register() {\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState({\r\n        user_name: \"\",\r\n        email_address: \"\",\r\n        phone_number: \"\",\r\n        password: \"\",\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({ ...user, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const content = {\r\n                subject: \"Email Verification\",\r\n                message: \"Please use the code below to verify your email.\",\r\n            };\r\n\r\n            // POST request to the FastAPI backend to register the user\r\n            const response = await axios.post(\"http://127.0.0.1:8000/register\", {\r\n                ...user,\r\n                content,\r\n            });\r\n            console.log(response);  // This will log the full response object\r\n\r\n            // You can log just the response data if you're only interested in that\r\n            console.log(response.data);\r\n            // Assuming that the response will have the user's data on success\r\n            if (response.data) {\r\n                setMessage(\"Registration successful. Please check your email for verification.\");\r\n                navigate(\"/verify\", { state: { email: user.email_address } });\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                // Assuming the error has a 'data' object with a 'detail' field\r\n                setMessage(error.response.data.detail || \"An error occurred.\");\r\n            } else if (error.request) {\r\n                setMessage(\"No response from the server. Please try again.\");\r\n            } else {\r\n                setMessage(\"Error: \" + error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"user_name\"\r\n                    placeholder=\"Name\"\r\n                    value={user.user_name}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <p>{JSON.stringify(user)}</p>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email_address\"\r\n                    placeholder=\"Email\"\r\n                    value={user.email_address}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"phone_number\"\r\n                    placeholder=\"Phone Number\"\r\n                    value={user.phone_number}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={user.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}