{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\GitHub\\\\AI-Shopping-System\\\\React\\\\email-verification-app\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState([{\n    key: 'user_name',\n    value: \"\"\n  }, {\n    key: 'email_address',\n    value: \"\"\n  }, {\n    key: 'phone_number',\n    value: \"\"\n  }, {\n    key: 'password',\n    value: \"\"\n  }]);\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prevState => prevState.map(field => field.key === name ? {\n      ...field,\n      value\n    } : field));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Convert the array back to an object before sending to the server\n\n    const userObj = {\n      user_name: \"example_user\",\n      email_address: \"example@example.com\",\n      phone_number: \"1234567890\",\n      password: \"SecureP@ss1!\"\n    };\n    const content = {\n      subject: \"Email Verification\",\n      message: \"Please use the code below to verify your email.\"\n    };\n    // Send the userObj as the data to the API\n    // Basic validation\n    if (!/^\\w{3,50}$/.test(userObj.user_name)) {\n      setMessage(\"Invalid username.\");\n      return;\n    }\n    if (!/^\\d{10}$/.test(userObj.phone_number)) {\n      setMessage(\"Phone number must be 10 digits.\");\n      return;\n    }\n    if (userObj.password.length < 8) {\n      setMessage(\"Password must be at least 8 characters.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/register\", {\n        user: userObj,\n        content\n      });\n      setMessage(\"Registration successful! Check your email.\");\n    } catch (error) {\n      setMessage(\"An error occurred.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user_name\",\n        placeholder: \"Name\",\n        value: user.user_name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email_address\",\n        placeholder: \"Email\",\n        value: user.email_address,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone_number\",\n        placeholder: \"Phone Number\",\n        value: user.phone_number,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: user.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"CQEpubArrMxFMj/ptcA/ZABtLfE=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Register","_s","navigate","user","setUser","key","value","message","setMessage","handleChange","e","name","target","prevState","map","field","handleSubmit","preventDefault","userObj","user_name","email_address","phone_number","password","content","subject","test","length","response","post","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/GitHub/AI-Shopping-System/React/email-verification-app/src/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Register() {\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState([\r\n        { key: 'user_name', value: \"\" },\r\n        { key: 'email_address', value: \"\" },\r\n        { key: 'phone_number', value: \"\" },\r\n        { key: 'password', value: \"\" },\r\n    ]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser((prevState) =>\r\n            prevState.map((field) =>\r\n                field.key === name ? { ...field, value } : field\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Convert the array back to an object before sending to the server\r\n\r\n        const userObj = {\r\n            user_name: \"example_user\",\r\n            email_address: \"example@example.com\",\r\n            phone_number: \"1234567890\",\r\n            password: \"SecureP@ss1!\"\r\n        };\r\n\r\n        const content = {\r\n            subject: \"Email Verification\",\r\n            message: \"Please use the code below to verify your email.\"\r\n        };\r\n        // Send the userObj as the data to the API\r\n        // Basic validation\r\n        if (!/^\\w{3,50}$/.test(userObj.user_name)) {\r\n            setMessage(\"Invalid username.\");\r\n            return;\r\n        }\r\n        if (!/^\\d{10}$/.test(userObj.phone_number)) {\r\n            setMessage(\"Phone number must be 10 digits.\");\r\n            return;\r\n        }\r\n        if (userObj.password.length < 8) {\r\n            setMessage(\"Password must be at least 8 characters.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\"http://127.0.0.1:8000/register\", {\r\n                user: userObj,\r\n                content,\r\n            });\r\n            setMessage(\"Registration successful! Check your email.\");\r\n        } catch (error) {\r\n            setMessage(\"An error occurred.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"user_name\"\r\n                    placeholder=\"Name\"\r\n                    value={user.user_name}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email_address\"\r\n                    placeholder=\"Email\"\r\n                    value={user.email_address}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"phone_number\"\r\n                    placeholder=\"Phone Number\"\r\n                    value={user.phone_number}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={user.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n\r\n            {message && <p>{message}</p>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}