{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\GitHub\\\\AI-Shopping-System\\\\React\\\\email-verification-app\\\\src\\\\UpdateVerifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateVerifyEmail() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const userData = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.userData; // Access the userData passed via navigate\n\n  const [emailValidate, setEmailValidate] = useState({\n    email: (userData === null || userData === void 0 ? void 0 : userData.email_address) || '',\n    // Set email from userData\n    code: ''\n  });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Hook to handle navigation\n\n  // Handle changes in input fields\n  const handleChange = e => {\n    setEmailValidate({\n      ...emailValidate,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log(emailValidate);\n      const response = await axios.post(\"http://127.0.0.1:8000/verify-email/\", {\n        emailValidate\n      });\n      console.log('Validate successful:', response.data);\n      setMessage(\"Email verified successfully!\");\n\n      // After email verification, proceed with sending all user data\n      const response1 = await axios.post('http://localhost:8000/postUpdate', userData); // Sending full user data\n      console.log('Registration successful:', response1.data);\n      setMessage(\"Redirecting to Homepage...\");\n      navigate('/Homepage', {\n        state: {\n          userData: {\n            ...response1.data\n          }\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Verification failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"A verification code has been sent to: \", emailValidate.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"code\" // Added name=\"code\" for correct binding\n        ,\n        placeholder: \"Verification Code\",\n        value: emailValidate.code,\n        onChange: handleChange // Handle input change\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateVerifyEmail, \"v0FApDXCRn7+SJX0nvN+RGyyfnw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = UpdateVerifyEmail;\nexport default UpdateVerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"UpdateVerifyEmail\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","useNavigate","jsxDEV","_jsxDEV","UpdateVerifyEmail","_s","_location$state","location","userData","state","emailValidate","setEmailValidate","email","email_address","code","message","setMessage","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","response","post","data","response1","error","_error$response","_error$response$data","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/GitHub/AI-Shopping-System/React/email-verification-app/src/UpdateVerifyEmail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate\r\n\r\nfunction UpdateVerifyEmail() {\r\n    const location = useLocation();\r\n    const userData = location.state?.userData; // Access the userData passed via navigate\r\n\r\n    const [emailValidate, setEmailValidate] = useState({\r\n        email: userData?.email_address || '',  // Set email from userData\r\n        code: '',\r\n    });\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate(); // Hook to handle navigation\r\n\r\n    // Handle changes in input fields\r\n    const handleChange = (e) => {\r\n        setEmailValidate({\r\n            ...emailValidate,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            console.log(emailValidate)\r\n            const response = await axios.post(\"http://127.0.0.1:8000/verify-email/\", { emailValidate });\r\n            console.log('Validate successful:', response.data);\r\n            setMessage(\"Email verified successfully!\");\r\n\r\n            // After email verification, proceed with sending all user data\r\n            const response1 = await axios.post('http://localhost:8000/postUpdate', userData);  // Sending full user data\r\n            console.log('Registration successful:', response1.data);\r\n            setMessage(\"Redirecting to Homepage...\");\r\n            navigate('/Homepage', { state: { userData: { ...response1.data } } });\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.detail || \"Verification failed.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Verify Email</h2>\r\n            <p>A verification code has been sent to: {emailValidate.email}</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"code\" // Added name=\"code\" for correct binding\r\n                    placeholder=\"Verification Code\"\r\n                    value={emailValidate.code}\r\n                    onChange={handleChange} // Handle input change\r\n                    required\r\n                />\r\n                <button type=\"submit\">Verify</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateVerifyEmail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}